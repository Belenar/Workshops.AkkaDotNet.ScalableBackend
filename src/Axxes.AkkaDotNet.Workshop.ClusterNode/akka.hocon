system-settings {
	actorsystem-name = "WorkshopActorSystem"
}
akka {
	loggers = ["Akka.Event.StandardOutLogger"]
	stdout-loglevel = INFO
	loglevel = INFO

	actor {
        provider = cluster
    }

    remote {
        dot-netty.tcp {
            transport-class = "Akka.Remote.Transport.DotNetty.TcpTransport, Akka.Remote"
            transport-protocol = tcp
            applied-adapters = []
            port = 0
            hostname = localhost
        }
    }

    cluster {
        seed-nodes = ["akka.tcp://WorkshopActorSystem@localhost:8202"]
        roles = [devicenode]
    }

    persistence {
        journal {
            plugin = "akka.persistence.journal.sql-server"
            sql-server {
                class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"
                plugin-dispatcher = "akka.actor.default-dispatcher"
                connection-string = "Data Source=(localdb)\\MSSqlLocalDB;Initial Catalog=AkkaPersistence;Integrated Security=True"
                connection-timeout = 30s
                schema-name = dbo
                table-name = EventJournal
                auto-initialize = on
                timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"
                metadata-table-name = Metadata
            }
        }
        snapshot-store {
            plugin = "akka.persistence.snapshot-store.sql-server"
            sql-server {
                class = "Akka.Persistence.SqlServer.Snapshot.SqlServerSnapshotStore, Akka.Persistence.SqlServer"
                plugin-dispatcher = "akka.actor.default-dispatcher"
                connection-string = "Data Source=(localdb)\\MSSqlLocalDB;Initial Catalog=AkkaPersistence;Integrated Security=True"
                connection-timeout = 30s
                schema-name = dbo
                table-name = SnapshotStore
                auto-initialize = on
            }
        }
    }
}